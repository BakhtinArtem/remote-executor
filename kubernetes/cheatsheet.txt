Tunneling localhost to minikube: kubectl port-forward svc/controller-service 8080:8080
Running bash inside pod: k exec -it runner-deployment-576f549dc-tgxhq -- bash
Service account creation: kubectl create serviceaccount job-manager -n default
Kubernetes network:
10.0.2.1    Router/gateway address
10.0.2.2    Special alias to your host loopback interface (i.e., 127.0.0.1 on your development machine)
10.0.2.3    First DNS server
10.0.2.4 / 10.0.2.5 / 10.0.2.6  Optional second, third and fourth DNS server (if any)
10.0.2.15   The emulated device's own network/ethernet interface
127.0.0.1   The emulated device's own loopback interface
In minikube use host.minikube.internal to access host
Another way to access pod: kubectl exec -i --tty mycurlpod -- sh
Interactive shell: kubectl run my-shell --rm -i --tty --image ubuntu -- bash
LoadBalancer tunneling - https://minikube.sigs.k8s.io/docs/handbook/accessing/
minikube tunnel - to start tunneling load balancer services

Debugging network: (test if target is reachable from source)
kubectl -n default exec -ti <NAME_POD_SOURCE> nslookup kubernetes.default <IP_TARGET>
kubectl exec -i -t client-deployment-5d888d445c-vz4vr -- nslookup kubernetes.default

